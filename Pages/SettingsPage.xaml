<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    xmlns:attachedProperties="clr-namespace:ZModLauncher.Attached_Properties"
    x:Class="ZModLauncher.Pages.SettingsPage"
    mc:Ignorable="d"
    d:DesignHeight="829" d:DesignWidth="1538"
    Margin="5"
    Title="Settings"
    FontSize="16"
    Foreground="#EBEBEB"
    FontFamily="Brutal Type"
    Name="This">
    <Page.Resources>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="ClickMode" Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC"
                                BorderThickness="{TemplateBinding BorderThickness}" Background="#6C6D6D6D"
                                SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1"
                                    HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="45">
                                <Path x:Name="arrow" Data="{StaticResource DownIcon}"
                                      Stretch="Uniform" Fill="{StaticResource ComboBox.Static.Glyph}"
                                      HorizontalAlignment="Center" Margin="16,0" VerticalAlignment="Center"
                                      RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <RotateTransform />
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true" />
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                               Value="false" />
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                               Value="false" />
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                               Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Static.Editable.Background}" />
                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Static.Editable.Border}" />
                                <Setter Property="Background" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                                <Setter Property="BorderBrush" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <!--<Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                               Value="true" />
                                    <Condition
                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                                <Setter Property="Background" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                                <Setter Property="BorderBrush" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <!--<Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                               Value="true" />
                                    <Condition
                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                                <Setter Property="Background" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                                <Setter Property="BorderBrush" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow"
                                        Value="{StaticResource ComboBox.Disabled.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                               Value="false" />
                                    <Condition
                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Disabled.Background}" />
                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Disabled.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                               Value="false" />
                                    <Condition
                                        Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                        Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                                <Setter Property="BorderBrush" TargetName="templateRoot"
                                        Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                                <Setter Property="Background" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                                <Setter Property="BorderBrush" TargetName="splitBorder"
                                        Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard SpeedRatio="5">
                                            <DoubleAnimation
                                                Storyboard.TargetName="arrow"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                From="0"
                                                To="180" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard SpeedRatio="5">
                                            <DoubleAnimation
                                                Storyboard.TargetName="arrow"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                From="180"
                                                To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="Transparent" />
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#EBEBEB" />
        <SolidColorBrush x:Key="OptionMark.Static.CheckedBorder" Color="#0057BD" />
        <SolidColorBrush x:Key="CheckBoxOuter.MouseOver.Checked.Background" Color="#1A2E45" />
        <SolidColorBrush x:Key="CheckBoxOuter.MouseOver.UnChecked.Background" Color="#4D4D4D" />
        <SolidColorBrush x:Key="CheckBox.MouseOver.Foreground" Color="#EBEBEB" />
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#0057BD" />
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
            <Setter Property="Foreground" Value="{StaticResource CaptionFontBrush}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="8,0" />
            <Setter Property="FontSize" Value="17" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid
                                Name="CheckBoxOuter"
                                Height="38"
                                Width="38"
                                Background="{StaticResource OptionMark.Static.Background}">
                                <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" HorizontalAlignment="Center"
                                        Margin="1" VerticalAlignment="Center"
                                        Height="20"
                                        Width="20">
                                    <Grid x:Name="markGrid"
                                          HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Path x:Name="optionMark"
                                              Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                              Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0"
                                              Stretch="None" />
                                        <Rectangle x:Name="indeterminateMark"
                                                   Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2"
                                                   Opacity="0" />
                                    </Grid>
                                </Border>
                            </Grid>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="CheckBoxOuter"
                                        Value="{StaticResource CheckBoxOuter.MouseOver.Checked.Background}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="CheckBoxOuter"
                                        Value="{StaticResource CheckBoxOuter.MouseOver.UnChecked.Background}" />
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="{StaticResource CheckBox.MouseOver.Foreground}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1" />
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
                                <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.CheckedBorder}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Page.Background>
        <StaticResource ResourceKey="SearchBackgroundBrush" />
    </Page.Background>
    <Grid>
        <Button
            Style="{StaticResource SettingsNavBackButtonStyle}"
            Click="ButtonBase_OnClick" />

        <StackPanel>
            <StackPanel
                Orientation="Vertical"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Margin="0,85,38,0">

                <attachedProperties:BasicMenuButton
                    Content="Clear Login Info"
                    x:Name="clearLoginInfoButton"
                    Icon="{StaticResource ClearLoginInfoButton}"
                    IconWidth="23"
                    HorizontalAlignment="Left"
                    HorizontalContentAlignment="Left"
                    Width="200"
                    Height="50"
                    Margin="36, 0"
                    Style="{StaticResource SideNavigationBasicMenuButtonsStyle}" Click="ClearLoginInfoButton_Click" />

                <attachedProperties:BasicMenuButton
                    Content="Clear Launcher Cache"
                    x:Name="clearLauncherCacheButton"
                    Icon="{StaticResource ClearLauncherCacheButton}"
                    IconWidth="23"
                    HorizontalAlignment="Left"
                    HorizontalContentAlignment="Left"
                    Width="230"
                    Height="50"
                    Margin="36, 0"
                    Style="{StaticResource SideNavigationBasicMenuButtonsStyle}" Click="ClearLauncherCacheButton_Click" />

                <attachedProperties:BasicMenuButton
                    Content="Sign Out"
                    x:Name="signOutButton"
                    Icon="{StaticResource SignOutButton}"
                    IconWidth="23"
                    HorizontalAlignment="Left"
                    HorizontalContentAlignment="Left"
                    Width="200"
                    Height="50"
                    Margin="36, 0"
                    Style="{StaticResource SideNavigationBasicMenuButtonsStyle}" Click="SignOutButton_Click" />
            </StackPanel>

            <StackPanel
                Orientation="Vertical"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Margin="30,20,38,0" Visibility="Collapsed">
                <CheckBox
                    Content="Run When My Computer Starts"
                    IsChecked="True" />
                <CheckBox
                    Content="Enable Debug Logging"
                    Margin="0,18,0,0" />
            </StackPanel>

            <Separator
                Margin="38,12"
                Background="#363636" />

            <StackPanel
                Margin="38,6">
                <StackPanel.Resources>
                    <SolidColorBrush
                        x:Key="HyperLink.Static.Foreground" Color="#EBEBEB" />

                    <Style TargetType="{x:Type Hyperlink}">
                        <Setter Property="TextDecorations" Value="None" />
                        <Setter Property="FontWeight" Value="Thin" />
                        <Setter Property="Foreground" Value="White" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource HyperLink.Static.Foreground}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>

                <TextBlock
                    Text="RESOURCES"
                    FontWeight="Bold"
                    Margin="0,20,0,0" />

                <TextBlock
                    Margin="0,25,0,0">
                    <Hyperlink RequestNavigate="Hyperlink_OnRequestNavigate"
                               NavigateUri="{Binding YouTubeLink, ElementName=This}">
                        YouTube
                    </Hyperlink>
                </TextBlock>

                <TextBlock
                    Margin="0,25,0,0">
                    <Hyperlink
                        RequestNavigate="Hyperlink_OnRequestNavigate"
                        NavigateUri="{Binding TwitterLink, ElementName=This}">
                        Twitter
                    </Hyperlink>
                </TextBlock>

                <TextBlock
                    Margin="0,25,0,0" Visibility="Collapsed">
                    <Hyperlink>Show Logs</Hyperlink>
                </TextBlock>

                <TextBlock
                    Margin="0,25,0,0">
                    <Hyperlink
                        RequestNavigate="Hyperlink_OnRequestNavigate"
                        NavigateUri="{Binding RoadmapLink, ElementName=This}">
                        Launcher Roadmap
                    </Hyperlink>
                </TextBlock>

                <TextBlock
                    Margin="0,25,0,0">
                    <Hyperlink
                        RequestNavigate="Hyperlink_OnRequestNavigate"
                        NavigateUri="{Binding FAQLink, ElementName=This}">
                        Frequently Asked Questions
                    </Hyperlink>
                </TextBlock>

                <Separator
                    Margin="0,34"
                    Background="#363636" />
            </StackPanel>
        </StackPanel>
    </Grid>
</Page>